/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import model.IngredientAmount;
import model.Week;

/**
 *
 * @author Morten
 */
public class ShopPanel extends javax.swing.JPanel {

    private Week week;
    private DefaultTableModel model;
    private ArrayList<IngredientAmount> ingredientList;
    private ArrayList<ArrayList> data;
    private boolean alreadyThere;

    /**
     * Creates new form ShopPanel
     */
    public ShopPanel(Week week) {
        this.week = week;
        data = new ArrayList<>();
        ingredientList = new ArrayList<>();
        loadData();
        initComponents();
        setBackground(GUI.mainColor);
        model = (DefaultTableModel) jShoppingList.getModel();
        dataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jShoppingList = new javax.swing.JTable();

        jShoppingList.setBackground(new java.awt.Color(255, 0, 255));
        jShoppingList.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jShoppingList.setForeground(new java.awt.Color(255, 255, 255));
        jShoppingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Indk√∏bsliste"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jShoppingList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jShoppingList;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        for (int i = 0; i < 7; i++) {
            ArrayList<IngredientAmount> originalList = (ArrayList<IngredientAmount>) week.getWeekdays()[i].getRecipe().getIngredientList().clone();
            ingredientList = new ArrayList<>(originalList);
            for (IngredientAmount ingredientAmount : ingredientList) {
                alreadyThere = false;
                for (int j = 0; j < data.size(); j++) {
                    if (data.get(j).get(1) == ingredientAmount.getIngredient().getName()) {
                        data.get(j).set(0, ((double) data.get(j).get(0) + ingredientAmount.getAmount()));
                        alreadyThere = true;
                    }
                }
                if (!alreadyThere) {
                    ArrayList<Object> a = new ArrayList<>();
                    a.add(ingredientAmount.getAmount());
                    a.add(ingredientAmount.getIngredient().getName());
                    a.add(ingredientAmount.getUnit().getShortname());
                    data.add(a);
                }
            }
        }
    }

    private void dataToTable() {
        for (int i = 0; i < data.size(); i++) {
            ArrayList iaData = data.get(i);
            Object[] test = {iaData.get(0) + " " + iaData.get(2) + " " + iaData.get(1)};
            model.addRow(test);
        }
    }
}
